--- xttmgr.c.orig	2004-11-13 22:25:45.000000000 +0800
+++ xttmgr.c	2004-11-14 00:23:51.831688008 +0800
@@ -61,11 +61,6 @@
 
 /* 系統預設的 encoding 表格指引檔位置 */
 static char *encodings_path= "/usr/X11R6/lib/X11/fonts/encodings/encodings.dir";
-/* XFree86 的設定檔 */
-static char *conf3_path    = "/etc/X11/XF86Config";
-static char *conf_path     = "/etc/X11/XF86Config-4";
-/* xfs 的字型設定檔 */ 
-static char *fsconfig      = "/etc/X11/fs/config";
 /* 所管理的字型存放位置 */
 static char *font_path     = "/usr/X11R6/lib/X11/fonts/TrueType/";
 /* 真實字型檔放置位置 */
@@ -137,6 +132,25 @@
 static int Add_Font_Path( char *path, int nocheck );
 static int Remove_Font_Path( char *path );
 
+/* XFree86 的設定檔 */
+static char *GetXConfigFile()
+{
+	static char filename[1000];
+	if(getenv("XCONFIGFILE")!=NULL) strcpy(filename,getenv("XCONFIGFILE"));
+	else if (File_Exist("/etc/X11/XF86Config")) strcpy(filename,"/etc/X11/XF86Config");
+	else if (File_Exist("/etc/X11/XF86Config-4")) strcpy(filename,"/etc/X11/XF86Config-4");
+	else  strcpy(filename,"/etc/X11/xorg.conf");
+	return filename;
+}
+/* xfs 的字型設定檔 */
+static char *GetFSConfigFile()
+{
+	static char filename[1000];
+	if(getenv("FSCONFIGFILE")!=NULL) strcpy(filename,getenv("FSCONFIGFILE"));
+	else strcpy(filename,"/etc/X11/fs/config");
+	return filename;
+}
+
 /* 主程式 */
 int main( int argc, char *argv[] )
 {
@@ -211,6 +225,9 @@
 		 if ( strcmp( argv[1], "--addpath" ) == 0 ) {
 	            mode = 'A';
 	         }
+		 if ( strcmp( argv[1], "--forceaddpath" ) == 0 ) {
+	            mode = 'F';
+	         }
 		 if ( strcmp( argv[1], "--rmpath" ) == 0 ) {
 	            mode = 'R';
 	         }
@@ -252,6 +269,9 @@
 	    case 'A':
 		    status = Add_Font_Path( argv[2], 0 );
 		    break;
+	    case 'F':
+		    status = Add_Font_Path( argv[2], 1 );
+		    break;
 	    case 'R':
 		    status = Remove_Font_Path( argv[2] );
 		    break;
@@ -1518,19 +1538,13 @@
        char buffer[512];
        char split1[512];
        char split2[512];
-       char conf_file[256];
+       char conf_file[1000];
        int  i;
        int  mode = 0;
        int  have_xtt = 0;
 
-       if ( !File_Exist( conf_path ) ) {
-	  fprintf( stderr, "Warning: Can't find `%s'.\n", conf_path );
-	  fprintf( stderr, "Using config file :`%s'.\n", conf3_path );
-	  strcpy( conf_file, conf3_path );
-       } else {
-	  strcpy( conf_file, conf_path );
-       }
-
+       strcpy(conf_file,GetXConfigFile());
+       fprintf( stderr, "Using config file :`%s'.\n",conf_file);
        chmod( conf_file, S_IRUSR | S_IWUSR | S_IXUSR | S_IRGRP | S_IROTH  );
 
        confp = fopen( conf_file, "r" );
@@ -1625,7 +1639,7 @@
 static int Read_xfsconfig( void )
 {
        FILE *xfsfp, *confp;
-       char conf_file[256];
+       char conf_file[1000];
        char buffer[512];
        char split1[512];
        char split2[512];
@@ -1634,7 +1648,7 @@
        num_fps = 0;
        num_cons = 0;
 
-       xfsfp = fopen( fsconfig, "r" ); /* 開啟 xfs 的字型設定檔 */
+       xfsfp = fopen( GetFSConfigFile(), "r" ); /* 開啟 xfs 的字型設定檔 */
 
        if ( xfsfp ) {
 
@@ -1658,16 +1672,11 @@
 
           fclose( xfsfp );
        } else {
-         fprintf( stderr, "Warning: Can't Read \"%s\".\n", fsconfig );
+         fprintf( stderr, "Warning: Can't Read \"%s\".\n",  GetFSConfigFile() );
 	 return 0;
        }
 
-       if ( !File_Exist( conf_path ) ) {
-	  strcpy( conf_file, conf3_path );
-       } else {
-	  strcpy( conf_file, conf_path );
-       }
-
+       strcpy(conf_file,GetXConfigFile());
        confp = fopen( conf_file, "r" );
        if ( confp == NULL ) return 0;
        
@@ -1831,7 +1840,7 @@
        }
 
        tmpfp = fopen( temp_file, "w+" );
-       xfsfp = fopen( fsconfig, "r" );
+       xfsfp = fopen(  GetFSConfigFile(), "r" );
 
        while ( fgets( buffer, sizeof( buffer ), xfsfp ) ) {
 	     split[0] = '\0';
@@ -1858,7 +1867,7 @@
        fclose( xfsfp );
        rewind( tmpfp );
 
-       xfsfp = fopen( fsconfig, "w" );
+       xfsfp = fopen(  GetFSConfigFile(), "w" );
        while ( fgets( buffer, sizeof( buffer ), tmpfp ) ) {
 	     fputs( buffer, xfsfp );
        }
