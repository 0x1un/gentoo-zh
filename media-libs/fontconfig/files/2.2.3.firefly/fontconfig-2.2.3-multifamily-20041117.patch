--- fontconfig-2.2.3.orig/src/fcfreetype.c	2004-03-20 07:23:07.000000000 +0800
+++ fontconfig-2.2.3/src/fcfreetype.c	2004-11-17 12:03:02.000000000 +0800
@@ -47,6 +47,8 @@
 #include <stdlib.h>
 #include <stdio.h>
 #include <string.h>
+/* Add by Firefly(firefly@firefly.idv.tw) */
+#include <iconv.h>
 #include "fcint.h"
 #include <ft2build.h>
 #include FT_FREETYPE_H
@@ -306,6 +308,9 @@ FcFreeTypeQuery (const FcChar8	*file,
     FcBool	    style_allocated = FcFalse;
     int		    family_prio = 0;
     int		    style_prio = 0;
+    /* Add by firefly@firfly.idv.tw */
+    /* 非英文/拉丁語系的字型名稱 */
+    FcChar8         *Other_family = 0;
 
     if (FT_Init_FreeType (&ftLibrary))
 	return 0;
@@ -370,11 +375,17 @@ FcFreeTypeQuery (const FcChar8	*file,
 	FcChar32	ucs4;
 	int		ilen, olen;
 	int		prio = 0;
+	iconv_t		cd;
 	
 	const FcCharMap	*map;
 	enum {
 	    FcNameEncodingUtf16, 
 	    FcNameEncodingAppleRoman,
+	    /* Add by Firefly(firefly@firefly.idv.tw) */
+	    FcNameEncodingTraditionalChinese,
+	    FcNameEncodingSimplifiedChinese,
+	    FcNameEncodingJapanese,
+	    FcNameEncodingKorean,
 	    FcNameEncodingLatin1 
 	} encoding;
 	
@@ -402,6 +413,19 @@ FcFreeTypeQuery (const FcChar8	*file,
 	    case TT_MAC_ID_ROMAN:
 		encoding = FcNameEncodingAppleRoman;
 		break;
+	    /* Add by Firefly(firefly@firefly.idv.tw) */
+	    case TT_MAC_ID_TRADITIONAL_CHINESE:
+		encoding = FcNameEncodingTraditionalChinese;
+		break;
+	    case TT_MAC_ID_SIMPLIFIED_CHINESE:
+		encoding = FcNameEncodingSimplifiedChinese;
+		break;
+	    case TT_MAC_ID_JAPANESE:
+		encoding = FcNameEncodingJapanese;
+		break;
+	    case TT_MAC_ID_KOREAN:
+		encoding = FcNameEncodingKorean;
+		break;
 	    default:
 		continue;
 	    }
@@ -427,6 +451,19 @@ FcFreeTypeQuery (const FcChar8	*file,
 		encoding = FcNameEncodingUtf16;
 		prio |= FC_NAME_PRIO_ENC_UNICODE;
 		break;
+	    /* Add by Firefly(firefly@firefly.idv.tw) */
+	    case TT_MS_ID_BIG_5:
+		encoding = FcNameEncodingTraditionalChinese;
+		break;
+	    case TT_MS_ID_GB2312:
+		encoding = FcNameEncodingSimplifiedChinese;
+		break;
+	    case TT_MS_ID_SJIS:
+		encoding = FcNameEncodingJapanese;
+		break;
+	    case TT_MS_ID_JOHAB:
+		encoding = FcNameEncodingKorean;
+		break;
 	    default:
 		continue;
 	    }
@@ -545,6 +582,46 @@ FcFreeTypeQuery (const FcChar8	*file,
 	    }
 	    *u8 = '\0';
 	    break;
+	case FcNameEncodingTraditionalChinese:
+	case FcNameEncodingSimplifiedChinese:
+	case FcNameEncodingJapanese:
+	case FcNameEncodingKorean:
+	    switch (encoding)
+	    {
+	    case FcNameEncodingTraditionalChinese:
+		cd = iconv_open("UTF-8", "BIG-5");
+		break;
+	    case FcNameEncodingSimplifiedChinese:
+		cd = iconv_open("UTF-8", "GB2312");
+		break;
+	    case FcNameEncodingJapanese:
+		cd = iconv_open("UTF-8", "SJIS");
+		break;
+	    case FcNameEncodingKorean:
+		cd = iconv_open("UTF-8", "JOHAB");
+		break;
+	    }
+
+	    if (cd < 0 )
+		continue;
+
+	    size_t inbytes  = src_len;
+	    size_t outbytes = inbytes / 2 * 3 + 1;
+	    char *inptr = src;
+	    utf8 = malloc (outbytes);
+	    if (!utf8)
+		continue;
+	    char *outptr = utf8;
+	    memset(utf8, 0, outbytes);
+
+	    size_t err = iconv(cd, (char **)&inptr, &inbytes, &outptr, &outbytes);
+	    iconv_close(cd);
+	    if (err < 0)
+	    {
+		free(utf8);
+		continue;
+	    }
+	    break;
 	default:
 	    continue;
 	}
@@ -561,6 +638,11 @@ FcFreeTypeQuery (const FcChar8	*file,
 	switch (sname.name_id) {
 	case TT_NAME_ID_FONT_FAMILY:
 	case TT_NAME_ID_PS_NAME:
+            /* 找到非英語/拉丁語系的字型名稱, 先暫存起來 */
+	    if ((prio & FC_NAME_PRIO_LANG) == FC_NAME_PRIO_LANG_NONE &&
+		 !Other_family)
+			Other_family = FcStrCopy(utf8);
+
 	    if (!family || prio > family_prio)
 	    {
 		if (family)
@@ -633,6 +715,17 @@ FcFreeTypeQuery (const FcChar8	*file,
     if (family_allocated)
 	free (family);
 
+     /*----------------------------------------------------------------------
+      * 如果有非英語系/拉丁語系的字型名稱, 就將這個名稱附加在現有字型名稱之後
+      */
+     if (Other_family)
+     {
+        FcPatternAddString(pat, FC_FAMILY, Other_family);
+        FcStrFree(Other_family);
+     }
+     /*--------------------------------------------------------------------*/
+
+
     if (style)
     {
 	if (!FcPatternAddString (pat, FC_STYLE, style))
